package UI;




import Model.Doctor;
import hospitalmanagementsystem.DoctorDirectory;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Sonur
 */
public class DoctorLoginScreen extends javax.swing.JFrame {
    public static String deEmail="";
    public static int deID;
    /**
     * Creates new form DoctorLoginScreen
     */
    public DoctorLoginScreen() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }
    public void clearAllFields(){
        
        docEmail.setText("");
        docPass.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DoctorLogin = new javax.swing.JPanel();
        email = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        docEmail = new javax.swing.JTextField();
        docPass = new javax.swing.JPasswordField();
        login = new javax.swing.JButton();
        back = new javax.swing.JButton();
        clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DoctorLogin.setBackground(new java.awt.Color(255, 204, 204));

        email.setText("Email_ID:");

        password.setText("Password:");

        docEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docEmailActionPerformed(evt);
            }
        });

        docPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docPassActionPerformed(evt);
            }
        });

        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorLoginLayout = new javax.swing.GroupLayout(DoctorLogin);
        DoctorLogin.setLayout(DoctorLoginLayout);
        DoctorLoginLayout.setHorizontalGroup(
            DoctorLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorLoginLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addGroup(DoctorLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DoctorLoginLayout.createSequentialGroup()
                        .addGroup(DoctorLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(email)
                            .addComponent(password))
                        .addGap(21, 21, 21)
                        .addGroup(DoctorLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(docEmail)
                            .addComponent(docPass, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)))
                    .addGroup(DoctorLoginLayout.createSequentialGroup()
                        .addComponent(back)
                        .addGap(55, 55, 55)
                        .addComponent(login)
                        .addGap(55, 55, 55)
                        .addComponent(clear)))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        DoctorLoginLayout.setVerticalGroup(
            DoctorLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorLoginLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(DoctorLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email)
                    .addComponent(docEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DoctorLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password)
                    .addComponent(docPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(DoctorLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login)
                    .addComponent(back)
                    .addComponent(clear))
                .addContainerGap(179, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DoctorLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DoctorLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void docEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docEmailActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        String idPattern ="[0-9]+";
        String emailPattern = "^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        boolean loginUser = false;
        ArrayList<Doctor> doctorDirectory = DoctorDirectory.arrayReturn();
      
        String dpass = new String(docPass.getPassword());
        String demail = docEmail.getText();
        int docID;
        if ( docEmail.getText().isEmpty() | docPass.getPassword().length==0){
            JOptionPane.showMessageDialog(this, "Please Fill all the fields" , "Warning", JOptionPane.ERROR_MESSAGE);
        }else if(!docEmail.getText().matches(emailPattern)){
            JOptionPane.showMessageDialog(this, "Enter valid Email", "Warning", JOptionPane.ERROR_MESSAGE);
        }
        else{
            for(Doctor doctor: doctorDirectory){
                
               if (doctor.email.equals(demail) && doctor.password.equals(dpass)) {
                    loginUser = true;
                    deID=doctor.id;
                    break;
                } else {
                    loginUser = false;
                }
            }
            if (loginUser) {
                JOptionPane.showMessageDialog(this, "Login Successfull");
                deEmail= docEmail.getText();
                DoctorLoginScreen dl = new DoctorLoginScreen();
                DoctorMainScreen dm = new DoctorMainScreen();
                dl.setVisible(false);
                dm.setVisible(true);
                super.dispose();

            } else {
                JOptionPane.showMessageDialog(this, "Error");

            }
            clearAllFields();
        }
        
            
    }//GEN-LAST:event_loginActionPerformed

    private void docPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docPassActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        clearAllFields();
    }//GEN-LAST:event_clearActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        DoctorLoginScreen dl = new DoctorLoginScreen();
        MainFrameForm ms = new MainFrameForm();
        ms.setVisible(true);
        dl.setVisible(false);
        super.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorLoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorLoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorLoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorLoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorLoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DoctorLogin;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JTextField docEmail;
    private javax.swing.JPasswordField docPass;
    private javax.swing.JLabel email;
    private javax.swing.JButton login;
    private javax.swing.JLabel password;
    // End of variables declaration//GEN-END:variables
}
