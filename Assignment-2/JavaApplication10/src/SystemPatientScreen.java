

import Model.Community;
import Model.Patients;
import UI.SystemMainScreen;
import hospitalmanagementsystem.CommunityDirectory;
import hospitalmanagementsystem.PatientDirectory;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author jigne
 */
public class SystemPatientScreen extends javax.swing.JFrame {
    ArrayList<Community> comdetail = CommunityDirectory.arrayReturn();
    /**
     * Creates new form SystemPatientScreen
     */
    public SystemPatientScreen() {
        initComponents();
        idTextField.setText(String.valueOf(PatientDirectory.arrayListLength()));
        DefaultComboBoxModel dml2 = new DefaultComboBoxModel();
        for (Community community : comdetail) {
            dml2.addElement(community.community);
        }
        CommunityComboBox.setModel(dml2);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        AddPatientButton = new javax.swing.JButton();
        DeletePatientButton = new javax.swing.JButton();
        ViewPatientsButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        ParentPanel = new javax.swing.JPanel();
        AddPatient = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        patientNameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        contactTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        addPatientButton = new javax.swing.JButton();
        ageTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        CommunityComboBox = new javax.swing.JComboBox<>();
        DeletePatient = new javax.swing.JPanel();
        deleteByComboBox = new javax.swing.JComboBox<>();
        deleteInfoTextField = new javax.swing.JTextField();
        deletePatientButton = new javax.swing.JButton();
        ViewPatients = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientDisplayTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        AddPatientButton.setText("Add");
        AddPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPatientButtonActionPerformed(evt);
            }
        });

        DeletePatientButton.setText("Delete");
        DeletePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePatientButtonActionPerformed(evt);
            }
        });

        ViewPatientsButton.setText("View");
        ViewPatientsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewPatientsButtonActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PATIENT");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddPatientButton)
                            .addComponent(DeletePatientButton)
                            .addComponent(ViewPatientsButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(AddPatientButton)
                .addGap(35, 35, 35)
                .addComponent(DeletePatientButton)
                .addGap(38, 38, 38)
                .addComponent(ViewPatientsButton)
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ParentPanel.setBackground(new java.awt.Color(255, 255, 255));
        ParentPanel.setLayout(new java.awt.CardLayout());

        AddPatient.setBackground(new java.awt.Color(255, 255, 255));
        AddPatient.setToolTipText("");

        jLabel2.setText("ID");

        idTextField.setEditable(false);
        idTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Full Name");

        patientNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNameTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Email");

        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Contact");

        contactTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Gender");

        buttonGroup1.add(maleRadioButton);
        maleRadioButton.setText("Male");

        buttonGroup1.add(femaleRadioButton);
        femaleRadioButton.setText("Female");

        addPatientButton.setText("Submit");
        addPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButtonActionPerformed(evt);
            }
        });

        ageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Age");

        jLabel8.setText("Community");

        jLabel9.setText("Password");

        javax.swing.GroupLayout AddPatientLayout = new javax.swing.GroupLayout(AddPatient);
        AddPatient.setLayout(AddPatientLayout);
        AddPatientLayout.setHorizontalGroup(
            AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPatientLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AddPatientLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordTextField))
                    .addGroup(AddPatientLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CommunityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(AddPatientLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddPatientLayout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(contactTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(AddPatientLayout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(AddPatientLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idTextField))
                            .addGroup(AddPatientLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(AddPatientLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(femaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(112, 112, 112))
        );
        AddPatientLayout.setVerticalGroup(
            AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPatientLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(contactTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(maleRadioButton)
                    .addComponent(femaleRadioButton))
                .addGap(18, 18, 18)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(CommunityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(addPatientButton)
                .addContainerGap())
        );

        ParentPanel.add(AddPatient, "card2");

        DeletePatient.setBackground(new java.awt.Color(255, 255, 255));

        deleteByComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Email" }));

        deleteInfoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInfoTextFieldActionPerformed(evt);
            }
        });

        deletePatientButton.setText("Delete");
        deletePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DeletePatientLayout = new javax.swing.GroupLayout(DeletePatient);
        DeletePatient.setLayout(DeletePatientLayout);
        DeletePatientLayout.setHorizontalGroup(
            DeletePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePatientLayout.createSequentialGroup()
                .addGroup(DeletePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DeletePatientLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(DeletePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteByComboBox, 0, 206, Short.MAX_VALUE)
                            .addComponent(deleteInfoTextField)))
                    .addGroup(DeletePatientLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(deletePatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        DeletePatientLayout.setVerticalGroup(
            DeletePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePatientLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(deleteByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(deleteInfoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(deletePatientButton)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        ParentPanel.add(DeletePatient, "card3");

        ViewPatients.setBackground(new java.awt.Color(255, 255, 255));

        patientDisplayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email", "Contact", "Age", "Community", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientDisplayTable);

        javax.swing.GroupLayout ViewPatientsLayout = new javax.swing.GroupLayout(ViewPatients);
        ViewPatients.setLayout(ViewPatientsLayout);
        ViewPatientsLayout.setHorizontalGroup(
            ViewPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewPatientsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ViewPatientsLayout.setVerticalGroup(
            ViewPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );

        ParentPanel.add(ViewPatients, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPatientButtonActionPerformed
        // TODO add your handling code here:
        ParentPanel.removeAll();
        ParentPanel.add(AddPatient);
        ParentPanel.repaint();
        ParentPanel.revalidate();

    }//GEN-LAST:event_AddPatientButtonActionPerformed

    private void DeletePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePatientButtonActionPerformed
        // TODO add your handling code here:
        ParentPanel.removeAll();
        ParentPanel.add(DeletePatient);
        ParentPanel.repaint();
        ParentPanel.revalidate();
    }//GEN-LAST:event_DeletePatientButtonActionPerformed

    private void ViewPatientsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPatientsButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) patientDisplayTable.getModel();
        tableModel.setRowCount(0);
        ArrayList<Patients> patientDirectory = PatientDirectory.arrayValueReturn();
        for (int i = 0; i < PatientDirectory.arrayListLength(); i++) {
            Object[] rowData = new Object[]{
                patientDirectory.get(i).id,
                patientDirectory.get(i).name,
                patientDirectory.get(i).email,
                patientDirectory.get(i).contact,
                patientDirectory.get(i).age,
                patientDirectory.get(i).community,
                patientDirectory.get(i).gender
            };
            tableModel.addRow(rowData);
        }
        ParentPanel.removeAll();
        ParentPanel.add(ViewPatients);
        ParentPanel.repaint();
        ParentPanel.revalidate();
    }//GEN-LAST:event_ViewPatientsButtonActionPerformed

    private void idTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextFieldActionPerformed

    private void patientNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNameTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void contactTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactTextFieldActionPerformed

    private void addPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButtonActionPerformed
        // TODO add your handling code here:

        String fullName = patientNameTextField.getText();
        String email = emailTextField.getText();
        String contact = contactTextField.getText();
        String gender = maleRadioButton.isSelected() ? (gender = "Male") : (gender = "Female");
        String age = ageTextField.getText();
        String community = CommunityComboBox.getSelectedItem().toString();
        String password = new String(passwordTextField.getPassword());

        String emailPattern = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

        String phonePattern = "(0|91)?[6-9][0-9]{9}";

        String namePattern = "[a-zA-Z_ ]+";

        String passwordPattern = "^(?=.*[0-9])"
                + "(?=.*[a-z])(?=.*[A-Z])"
                + "(?=.*[@#$%^&+=])"
                + "(?=\\S+$).{8,20}$";
        boolean patientExists = false;
        //check if user exists
        for (Patients patient : PatientDirectory.arrayValueReturn()) {
            if (patient.email.equals(email)) {
                patientExists = true;
            } else {
                patientExists = false;
            }
        }

        System.out.println(fullName + email + contact + gender + age + community + password);

        if (patientExists) {
            JOptionPane.showMessageDialog(this, "User already exists", "Warning",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (fullName.isEmpty() || email.isEmpty() || contact.isEmpty() || age.isEmpty() || community.isEmpty() || password.isEmpty() || gender.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Fill All The Fields", "Warning",
                        JOptionPane.ERROR_MESSAGE);
            } else if (!fullName.matches(namePattern) || !community.matches(namePattern)) {
                JOptionPane.showMessageDialog(this, "Enter correct details", "Warning",
                        JOptionPane.ERROR_MESSAGE);
            } else if (!email.matches(emailPattern)) {
                JOptionPane.showMessageDialog(this, "Enter a Valid Email", "Warning",
                        JOptionPane.ERROR_MESSAGE);
            } else if (!contact.matches(phonePattern)) {
                JOptionPane.showMessageDialog(this, "Enter a Valid Phone Number", "Warning",
                        JOptionPane.ERROR_MESSAGE);
            } else if (!password.matches(passwordPattern)) {
                JOptionPane.showMessageDialog(this, "Password should contain atleast 1 special character and number", "Warning",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                //when all conditions are false
                int patientAgeC = Integer.parseInt(age);
                PatientDirectory.addItems(PatientDirectory.arrayListLength() + 1, fullName, email, contact, gender, patientAgeC, community, password);
                System.out.println(PatientDirectory.arrayValueReturn());
                idTextField.setText(String.valueOf(PatientDirectory.arrayListLength()));
                patientNameTextField.setText("");
                emailTextField.setText("");
                contactTextField.setText("");
                passwordTextField.setText("");
                ageTextField.setText("");
                
            }
        }


    }//GEN-LAST:event_addPatientButtonActionPerformed

    private void ageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTextFieldActionPerformed

    private void deleteInfoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInfoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteInfoTextFieldActionPerformed

    private void deletePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatientButtonActionPerformed
        // TODO add your handling code here:
        String deleteBy = deleteByComboBox.getSelectedItem().toString();

        if (deleteBy == "ID") {
            if (!deleteInfoTextField.getText().isEmpty()) {
                for (Patients patient : PatientDirectory.arrayValueReturn()) {
                    if (patient.id == Integer.parseInt(deleteInfoTextField.getText())) {
                        PatientDirectory.arrayValueReturn().remove(patient);
                        System.out.println(PatientDirectory.arrayValueReturn());
                    } else {
                        JOptionPane.showMessageDialog(this, "No details found", "Warning",
                                JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                //error message
                JOptionPane.showMessageDialog(this, "Enter valid data", "Warning",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (!deleteInfoTextField.getText().isEmpty()) {
                for (Patients patient : PatientDirectory.arrayValueReturn()) {
                    if (patient.email.equals(deleteInfoTextField.getText())) {
                        PatientDirectory.arrayValueReturn().remove(patient);
                        System.out.println(PatientDirectory.arrayValueReturn());
                    } else {
                        JOptionPane.showMessageDialog(this, "No details found", "Warning",
                                JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                //error message
                JOptionPane.showMessageDialog(this, "Enter valid data", "Warning",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deletePatientButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        SystemMainScreen sm = new SystemMainScreen();
        SystemPatientScreen sp = new SystemPatientScreen();
        sm.setVisible(true);
        sp.setVisible(false);
        super.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SystemPatientScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SystemPatientScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SystemPatientScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SystemPatientScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SystemPatientScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddPatient;
    private javax.swing.JButton AddPatientButton;
    private javax.swing.JComboBox<String> CommunityComboBox;
    private javax.swing.JPanel DeletePatient;
    private javax.swing.JButton DeletePatientButton;
    private javax.swing.JPanel ParentPanel;
    private javax.swing.JPanel ViewPatients;
    private javax.swing.JButton ViewPatientsButton;
    private javax.swing.JButton addPatientButton;
    private javax.swing.JTextField ageTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField contactTextField;
    private javax.swing.JComboBox<String> deleteByComboBox;
    private javax.swing.JTextField deleteInfoTextField;
    private javax.swing.JButton deletePatientButton;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField idTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTable patientDisplayTable;
    private javax.swing.JTextField patientNameTextField;
    // End of variables declaration//GEN-END:variables
}
